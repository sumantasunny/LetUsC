#include <stdio.h>
#include <math.h>

int val = 0;
int s[] = {0, 0, 0, 0, 0, 0, 0};

int max(int a, int b, int s2, int s3){
    if(a>b){
        val = s2;
    }
    else{
        val = s3;
    }
    return a>b?a:b;
}

int knapsack(int w[], int v[], int n, int capacity, int s1){
    if(n==0){
        //printf("%d  \n", s1);
        return 0;
    }
    
    if(capacity==0){
        return 0;
    }
    
    int i=0, s2, s3;
    
    s2 = s1 + pow(2, n-1);
    
    s3 = s1;
    
    if (w[n-1] > capacity){
        return knapsack(w, v, n-1, capacity, s3);
    }
    
    return max(v[n-1] + knapsack(w, v, n-1, capacity-w[n-1], s2), knapsack(w, v, n-1, capacity, s3), s2, s3);
}


int main() {
	
	int w[] = {10, 5, 2, 18, 7, 15, 25};
	int v[] = {100, 15, 100, 15, 65, 55, 60};
	int n = sizeof(v)/sizeof(v[0]);
	int capacity = 25;
	
	printf("%d\n", knapsack(w, v, n, capacity, 0));
	
	/*int i;
	for(i=0; i<n; i++){
	    printf("%d  ", s[i]);
	}*/
	
	printf("%d  ", val);
	
	return 0;
}

